diff --git a/include/SBomber.h b/include/SBomber.h
index 3ce1b9c..9448639 100644
--- a/include/SBomber.h
+++ b/include/SBomber.h
@@ -2,6 +2,8 @@
 
 #include <vector>
 
+#include <iterator>
+
 #include "LevelGUI.h"
 #include "Plane.h"
 #include "Bomb.h"
@@ -44,10 +46,61 @@ private:
 
     std::vector<DynamicObject*> vecDynamicObj;
     std::vector<GameObject*> vecStaticObj;
-    
+
+    class BombIterator
+    {
+        std::vector<DynamicObject*>& ref;
+        size_t curIndex;
+        Bomb* pBomb;
+    public:
+        BombIterator(std::vector<DynamicObject*>& _ref) : ref(_ref),curIndex(-1), pBomb(nullptr) {};
+
+        void reset() { curIndex=-1; pBomb=nullptr;};
+
+        BombIterator& operator++() {
+            ++curIndex;
+            if (curIndex == -1)
+                curIndex = 0;
+            for(; curIndex < ref.size(); curIndex++)
+            {
+                pBomb = dynamic_cast<Bomb*>(ref[curIndex]);
+                if (pBomb != nullptr) break;
+            }
+
+            if (curIndex == ref.size())
+            {
+                curIndex = -1;
+                pBomb = nullptr;
+            }
+
+            return *this;
+        }
+        Bomb* operator*() {return pBomb;}
+
+        bool operator==(BombIterator it) // проверка на лог. равенство итераторов
+        {
+            if (curIndex == it.curIndex &&
+                pBomb == it.pBomb &&
+                ref == it.ref)
+            {
+                return true;
+            }
+            return false;
+        }
+
+        bool operator!=(BombIterator it) // проверка на лог. неравенство
+        {
+            return !(*this == it);
+        }
+    };
+
+    BombIterator begin() { BombIterator it(vecDynamicObj); return it; }
+    BombIterator end() { BombIterator it(vecDynamicObj); it.reset(); return it; }
+
+private:
     bool exitFlag;
 
     uint64_t startTime, finishTime, passedTime;
     uint16_t bombsNumber, deltaTime, fps;
     int16_t score;
-};
\ No newline at end of file
+};
diff --git a/src/SBomber.cpp b/src/SBomber.cpp
index 2bd57d7..eb69898 100644
--- a/src/SBomber.cpp
+++ b/src/SBomber.cpp
@@ -186,12 +186,18 @@ Ground* SBomber::FindGround() const {
 std::vector<Bomb*> SBomber::FindAllBombs() const {
   std::vector<Bomb*> vecBombs;
 
-  for (size_t i = 0; i < vecDynamicObj.size(); i++) {
-    Bomb* pBomb = dynamic_cast<Bomb*>(vecDynamicObj[i]);
-    if (pBomb != nullptr) {
-      vecBombs.push_back(pBomb);
-    }
-  }
+    BombIterator it;
+//   std::vector<DynamicObject*>::const_iterator it;
+    it=vecDynamicObj.begin();
+    for( ;it != vecDynamicObj.end();++it)
+       vecBombs.push_back(*it);
+
+//  for (size_t i = 0; i < vecDynamicObj.size(); i++) {
+//    Bomb* pBomb = dynamic_cast<Bomb*>(vecDynamicObj[i]);
+//    if (pBomb != nullptr) {
+//      vecBombs.push_back(pBomb);
+//    }
+//  }
 
   return vecBombs;
 }
